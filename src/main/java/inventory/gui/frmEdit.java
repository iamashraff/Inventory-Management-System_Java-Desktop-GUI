package inventory.gui;

import java.awt.Component;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JTextField;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashSet;
import javax.swing.Timer;
/**
 *
 * @author Muhamad Ashraff
 */
public class frmEdit extends javax.swing.JFrame {
    //CREATE AND INIT COMPONENTS
        //COMPUTER COMPONENTS
        JLabel lblcompName =    new JLabel("Computer Name : ");
        JLabel lblcompSerial =  new JLabel("Serial : ");
        JLabel lblcompProc =    new JLabel("Processor : ");
        JLabel lblcompRam =     new JLabel("RAM : ");
        JLabel lblcompStorage = new JLabel("Storage : ");
        
        JTextField txtcompName = new JTextField(15);
        JTextField txtcompSerial = new JTextField(15);
        JTextField txtcompProc = new JTextField(15);
        JTextField txtcompRam = new JTextField(15);
        JTextField txtcompStorage = new JTextField(15);
        
        //DESKTOP COMPONENT
        JLabel lblcomCategory = new JLabel("Desktop Category : ");
        JTextField txtcompCategory = new JTextField(15);
        
        //LAPTOP COMPONENT
        JLabel lbllapCategory = new JLabel("Laptop Category : ");
        JTextField txtlapCategory = new JTextField(15);
        
        JLabel lbllapWeight = new JLabel("Laptop Weight : ");
        JTextField txtlapWeight = new JTextField(15);
        
        //MOBILE DEVICE COMPONENTS
        JLabel lbldevName     = new JLabel("Device Name : ");
        JLabel lbldevImei     = new JLabel("IMEI No : ");
        JLabel lbldevRam      = new JLabel("RAM : ");
        JLabel lbldevStorage  = new JLabel("Storage : ");
        JLabel lbldevWeight   = new JLabel("Weight : ");
        
        JTextField txtdevName = new JTextField(15);
        JTextField txtdevImei = new JTextField(15);
        JTextField txtdevRam = new JTextField(15);
        JTextField txtdevStorage = new JTextField(15);
        JTextField txtdevWeight = new JTextField(15);
        
        //SMARTPHONE COMPONENTS
        JLabel lblspCategory   = new JLabel("Smartphone Category : ");
        JTextField txtspCategory = new JTextField(15);
        
        //TABLET CATEGORY
        JLabel lbltbCategory   = new JLabel("Tablet Category : ");
        JTextField txttbCategory = new JTextField(15);
    
    /**
     * Creates new form editFrm
     */
    String oldStrdata = null;
    Timer timer;
    int i = 0;
    frmeditLoad editLoad = new frmeditLoad();
    
    public frmEdit() {
        initComponents();
        
    }//DEFAULT CONSTRUCTOR
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jbSave = new javax.swing.JButton();
        mkPanel = new javax.swing.JPanel();
        lblProdID = new javax.swing.JLabel();
        txtProdID = new javax.swing.JTextField();
        lblProdName = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        lblQty = new javax.swing.JLabel();
        txtProdName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        lblBrand = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        lblModel = new javax.swing.JLabel();
        txtProdType = new javax.swing.JTextField();
        jbClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Product");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel2.setBackground(new java.awt.Color(181, 79, 119));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit32.png"))); // NOI18N
        jLabel2.setText("Edit Product");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addGap(35, 35, 35))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Type :");

        jbSave.setText("Save Changes...");
        jbSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveActionPerformed(evt);
            }
        });

        mkPanel.setBackground(new java.awt.Color(255, 255, 255));
        mkPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblProdID.setText("Product ID :");

        txtProdID.setEditable(false);
        txtProdID.setBackground(new java.awt.Color(255, 255, 255));
        txtProdID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtProdID.setForeground(new java.awt.Color(0, 204, 204));
        txtProdID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtProdIDMousePressed(evt);
            }
        });

        lblProdName.setText("Product Name :");

        lblQty.setText("Quantity :");

        lblPrice.setText("Price :");

        lblBrand.setText("Brand :");

        lblModel.setText("Model :");

        txtProdType.setEditable(false);
        txtProdType.setBackground(new java.awt.Color(255, 255, 255));
        txtProdType.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtProdType.setForeground(new java.awt.Color(0, 204, 204));
        txtProdType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtProdTypeMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtProdID, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(txtQty)
                            .addComponent(txtProdName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice)
                            .addComponent(txtBrand)
                            .addComponent(txtModel)
                            .addComponent(txtProdType, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(mkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblProdID)
                                    .addComponent(jLabel3)
                                    .addComponent(lblProdName)
                                    .addComponent(lblQty)
                                    .addComponent(lblPrice)
                                    .addComponent(lblBrand)
                                    .addComponent(lblModel))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbSave, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtProdType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProdID)
                            .addComponent(txtProdID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProdName)
                            .addComponent(txtProdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblQty)
                            .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrice)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBrand))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblModel)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jbSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbClose.setBackground(new java.awt.Color(255, 153, 153));
        jbClose.setText("Close");
        jbClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbClose, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbClose)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    //METHOD TO DETERMINE THE PRODUCT TYPE
    private void checkprodType(){
        
        if (txtProdType.getText().equals("Desktop")){
            System.out.println("Product Type : Desktop");
            int pID = Integer.parseInt(txtProdID.getText());
            String pName = txtProdName.getText();
            int pQty = Integer.parseInt(txtQty.getText());
            double pPrice = Double.parseDouble(txtPrice.getText());
            String pBrand = txtBrand.getText();
            String pModel = txtModel.getText();
            String cName = txtcompName.getText();
            int cSerial = Integer.parseInt(txtcompSerial.getText());
            String cProc = txtcompProc.getText();
            int cRam = Integer.parseInt(txtcompRam.getText());
            int cStorage = Integer.parseInt(txtcompStorage.getText());
            String cCategory = txtcompCategory.getText();
            
            String oldStr = oldStrdata;
            String newStr = pID+","+"Desktop"+","+pName+","+pQty+","+pPrice+","+
                            pBrand+","+pModel+","+
                            cName+","+cSerial+","+cProc+","+cRam+","+cStorage+","+cCategory;
            
            
            timer = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                  i++;
                    if(i==1){
                        editLoad.setVisible(true);
                        editLoad.lbleditLoad.setText("Processing Changes . . .");
                    }//END IF
                    
                    if (i==15){
                        editLoad.lbleditLoad.setText("Saving Product ID : " + pID + " ...");
                    }//END IF
                    
                    if (i==20){
                        editLoad.lbleditLoad.setText("Saving Product Name : " + pName + " ...");
                    }//END IF
                    
                    if (i==25){
                        editLoad.lbleditLoad.setText("Saving Quantity : " + pQty + " ...");
                    }//END IF
                    
                    if (i==30){
                        editLoad.lbleditLoad.setText("Saving Price : " + pPrice + " ...");
                    }//END IF
                    
                    if (i==35){
                        editLoad.lbleditLoad.setText("Saving Brand : " + pBrand + " ...");
                    }//END IF
                    
                    if (i==40){
                        editLoad.lbleditLoad.setText("Saving Model : " + pModel + " ...");
                    }//END IF
                    
                    if (i==45){
                        editLoad.lbleditLoad.setText("Finalizing . . . ");
                    }//END IF
                    
                    if (i==65){
                    editLoad.dispose();
                    }//END IF
                    
                    if(i==66){
                        //CALL METHOD SAVEMODIFIEDDATA()
                         //WITH 2 PARAMTER OF OLD DATA AND NEW DATA
                        savemodifiedData(oldStr, newStr);
                        playExclamation();
                        String message = "Product with ID : "+ pID + "\n" +
                                         "has been successfully updated !" ;
                        new msgBox(message,"SUCCESS").showinfoMsg();
                        dispose();
                    }//END IF
                    
                    if(i>67){

                        timer.stop();
                        i = 0;    
                    }//END IF
            }//END PUBLIC VOID
        });
        timer.start();
            

        }else
            
        if (txtProdType.getText().equals("Laptop")){
            System.out.println("Product Type : Laptop");
            int pID = Integer.parseInt(txtProdID.getText());
            String pName = txtProdName.getText();
            int pQty = Integer.parseInt(txtQty.getText());
            double pPrice = Double.parseDouble(txtPrice.getText());
            String pBrand = txtBrand.getText();
            String pModel = txtModel.getText();
            String cName = txtcompName.getText();
            int cSerial = Integer.parseInt(txtcompSerial.getText());
            String cProc = txtcompProc.getText();
            int cRam = Integer.parseInt(txtcompRam.getText());
            int cStorage = Integer.parseInt(txtcompStorage.getText());
            String lpCategory = txtlapCategory.getText();
            double lpWeight = Double.parseDouble(txtlapWeight.getText());
            
            String oldStr = oldStrdata;
            String newStr = pID+","+"Laptop"+","+pName+","+pQty+","+pPrice+","+
                            pBrand+","+pModel+","+
                            cName+","+cSerial+","+cProc+","+cRam+","+cStorage+","+lpCategory+","+lpWeight;
            timer = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                  i++;
                    if(i==1){
                        editLoad.setVisible(true);
                        editLoad.lbleditLoad.setText("Processing Changes . . .");
                    }//END IF
                    
                    if (i==15){
                        editLoad.lbleditLoad.setText("Saving Product ID : " + pID + " ...");
                    }//END IF
                    
                    if (i==20){
                        editLoad.lbleditLoad.setText("Saving Product Name : " + pName + " ...");
                    }//END IF
                    
                    if (i==25){
                        editLoad.lbleditLoad.setText("Saving Quantity : " + pQty + " ...");
                    }//END IF
                    
                    if (i==30){
                        editLoad.lbleditLoad.setText("Saving Price : " + pPrice + " ...");
                    }//END IF
                    
                    if (i==35){
                        editLoad.lbleditLoad.setText("Saving Brand : " + pBrand + " ...");
                    }//END IF
                    
                    if (i==40){
                        editLoad.lbleditLoad.setText("Saving Model : " + pModel + " ...");
                    }//END IF
                    
                    if (i==45){
                        editLoad.lbleditLoad.setText("Finalizing . . . ");
                    }//END IF
                    
                    if (i==65){
                    editLoad.dispose();
                    }//END IF
                    
                    if(i==66){
                        savemodifiedData(oldStr, newStr);
                        playExclamation();
                        String message = "Product with ID : "+ pID + "\n" +
                                         "has been successfully updated !" ;
                        new msgBox(message,"SUCCESS").showinfoMsg();
                        dispose();
                    }//END IF
                    
                    if(i>67){

                        timer.stop();
                        i = 0;    
                    }//END IF
                }//END PUBLIC VOID
            });
            timer.start();
            
        }else
            
        if (txtProdType.getText().equals("Smartphone")){
            System.out.println("Product Type : Smartphone");
            int pID = Integer.parseInt(txtProdID.getText());
            String pName = txtProdName.getText();
            int pQty = Integer.parseInt(txtQty.getText());
            double pPrice = Double.parseDouble(txtPrice.getText());
            String pBrand = txtBrand.getText();
            String pModel = txtModel.getText();
            String dName = txtdevName.getText();
            int dImei = Integer.parseInt(txtdevImei.getText());
            int dRam = Integer.parseInt(txtdevRam.getText());
            int dStorage = Integer.parseInt(txtdevStorage.getText());
            double dWeight = Double.parseDouble(txtdevWeight.getText());
            String spCategory = txtspCategory.getText();
            
            String oldStr = oldStrdata;
            String newStr = pID+","+"Smartphone"+","+pName+","+pQty+","+pPrice+","+
                            pBrand+","+pModel+","+dName+","+dImei+","+dRam+","+dStorage+","+dWeight+","+spCategory;
            
            timer = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                  i++;
                    if(i==1){
                        editLoad.setVisible(true);
                        editLoad.lbleditLoad.setText("Processing Changes . . .");
                    }//END IF
                    
                    if (i==15){
                        editLoad.lbleditLoad.setText("Saving Product ID : " + pID + " ...");
                    }//END IF
                    
                    if (i==20){
                        editLoad.lbleditLoad.setText("Saving Product Name : " + pName + " ...");
                    }//END IF
                    
                    if (i==25){
                        editLoad.lbleditLoad.setText("Saving Quantity : " + pQty + " ...");
                    }//END IF
                    
                    if (i==30){
                        editLoad.lbleditLoad.setText("Saving Price : " + pPrice + " ...");
                    }//END IF
                    
                    if (i==35){
                        editLoad.lbleditLoad.setText("Saving Brand : " + pBrand + " ...");
                    }//END IF
                    
                    if (i==40){
                        editLoad.lbleditLoad.setText("Saving Model : " + pModel + " ...");
                    }//END IF
                    
                    if (i==45){
                        editLoad.lbleditLoad.setText("Finalizing . . . ");
                    }//END IF
                    
                    if (i==65){
                    editLoad.dispose();
                    }//END IF
                    
                    if(i==66){
                        savemodifiedData(oldStr, newStr);
                        playExclamation();
                        String message = "Product with ID : "+ pID + "\n" +
                                         "has been successfully updated !" ;
                        new msgBox(message,"SUCCESS").showinfoMsg();
                        dispose();
                    }//END IF
                    
                    if(i>67){

                        timer.stop();
                        i = 0;    
                    }//END IF
                }//END PUBLIC VOID
            });
            timer.start();
            
        }else
        if (txtProdType.getText().equals("Tablet")){
            System.out.println("Product Type : Tablet");
            int pID = Integer.parseInt(txtProdID.getText());
            String pName = txtProdName.getText();
            int pQty = Integer.parseInt(txtQty.getText());
            double pPrice = Double.parseDouble(txtPrice.getText());
            String pBrand = txtBrand.getText();
            String pModel = txtModel.getText();
            String dName = txtdevName.getText();
            int dImei = Integer.parseInt(txtdevImei.getText());
            int dRam = Integer.parseInt(txtdevRam.getText());
            int dStorage = Integer.parseInt(txtdevStorage.getText());
            double dWeight = Double.parseDouble(txtdevWeight.getText());
            String tbCategory = txttbCategory.getText();
            
            String oldStr = oldStrdata;
            String newStr = pID+","+"Tablet"+","+pName+","+pQty+","+pPrice+","+
                            pBrand+","+pModel+","+dName+","+dImei+","+dRam+","+dStorage+","+dWeight+","+tbCategory;
            
            timer = new Timer(60, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                  i++;
                    if(i==1){
                        editLoad.setVisible(true);
                        editLoad.lbleditLoad.setText("Processing Changes . . .");
                    }//END IF
                    
                    if (i==15){
                        editLoad.lbleditLoad.setText("Saving Product ID : " + pID + " ...");
                    }//END IF
                    
                    if (i==20){
                        editLoad.lbleditLoad.setText("Saving Product Name : " + pName + " ...");
                    }//END IF
                    
                    if (i==25){
                        editLoad.lbleditLoad.setText("Saving Quantity : " + pQty + " ...");
                    }//END IF
                    
                    if (i==30){
                        editLoad.lbleditLoad.setText("Saving Price : " + pPrice + " ...");
                    }//END IF
                    
                    if (i==35){
                        editLoad.lbleditLoad.setText("Saving Brand : " + pBrand + " ...");
                    }//END IF
                    
                    if (i==40){
                        editLoad.lbleditLoad.setText("Saving Model : " + pModel + " ...");
                    }//END IF
                    
                    if (i==45){
                        editLoad.lbleditLoad.setText("Finalizing . . . ");
                    }//END IF
                    
                    if (i==65){
                    editLoad.dispose();
                    }//END IF
                    
                    if(i==66){
                        savemodifiedData(oldStr, newStr);
                        playExclamation();
                        String message = "Product with ID : "+ pID + "\n" +
                                         "has been successfully updated !" ;
                        new msgBox(message,"SUCCESS").showinfoMsg();
                        dispose();
                    }//END IF
                    
                    if(i>67){

                        timer.stop();
                        i = 0;    
                    }//END IF
                }//END PUBLIC VOID
            });
            timer.start();
            
        }//END IF
        
    }//END METHOD
    
    private void jbSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveActionPerformed
        
        dispose();
        checkprodType();
        
    }//GEN-LAST:event_jbSaveActionPerformed

    //METHOD TO SAVE NEW DATA
    private void savemodifiedData(String oldStr, String newStr){
    String strPath = "C:/Products.txt";
        File fileToBeModified = new File(strPath);
         
        String oldContent = "";
        BufferedReader reader = null;
        FileWriter writer = null;
         
        try
        {   
            //READ LINES OF TXT FILE
            reader = new BufferedReader(new FileReader(fileToBeModified));
            String line = reader.readLine();
             
            while (line != null) 
            {
                oldContent = oldContent + line + System.lineSeparator();
                 
                line = reader.readLine();
            }//ENDDO
             
            //REPLACING WITH NEW DATA
            String newContent = oldContent.replaceAll(oldStr, newStr);

            //REWRITE THE NEW DATA 
            writer = new FileWriter(fileToBeModified);
            writer.write(newContent);
            System.out.println("DONE !");
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }//END TRY CATCH
        finally{
            try
            {
                //CLOSE READER & WRITER
                reader.close();
                writer.close();
            } 
            catch (IOException e) 
            {
                e.printStackTrace();
            }//END NESTED TRY CATCH
        }//END FINALLY
    }//END METHOD SAVEMODIFIEDDATA
    
    private void jbCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCloseActionPerformed
        dispose();
    }//GEN-LAST:event_jbCloseActionPerformed

    private void txtProdTypeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProdTypeMousePressed
        playExclamation();
        new msgBox("Product Type cannot be modified.","WARNING").showwarningMsg();
    }//GEN-LAST:event_txtProdTypeMousePressed

    private void txtProdIDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProdIDMousePressed
        playExclamation();
        new msgBox("Product ID cannot be modified.\nIt is an auto generated by the program !","WARNING").showwarningMsg();
    }//GEN-LAST:event_txtProdIDMousePressed

    //METHOD TO PLAY EXCLAMATION SOUND FOR MSGBOX
    private void playExclamation(){
        final Runnable runnable =
        (Runnable) Toolkit.getDefaultToolkit().getDesktopProperty("win.sound.asterisk");
        if (runnable != null) runnable.run();
    }//END METHOD
    
    public void loadData(int n){
      String strPath = "C:/Products.txt";
      n = n-1;
      String line;
      try (BufferedReader br = new BufferedReader(new FileReader(strPath))) {
          for (int i = 0; i < n; i++)
              br.readLine();
          line = br.readLine();
          System.out.println(line);
          
          //PASS OLD STRING DATA
          oldStrdata = line;
          if (line.contains("Smartphone")){
               makeSmartphonePanel();
               System.out.println("This is a smartphone product");
               String[] smData = line.split(",");
               System.out.println("Product ID     : " + smData[0]);
               System.out.println("Product Type   : " + smData[1]);
               System.out.println("Product Name   : " + smData[2]);
               System.out.println("Product Qty    : " + smData[3]);
               System.out.println("Product Price  : " + smData[4]);
               System.out.println("Brand          : " + smData[5]);
               System.out.println("Model          : " + smData[6]);
               System.out.println("Device Name    : " + smData[7]);
               System.out.println("Device IMEI    : " + smData[8]);
               System.out.println("Device RAM     : " + smData[9]);
               System.out.println("Device Storage : " + smData[10]);
               System.out.println("Device Weight  : " + smData[11]);
               System.out.println("Smartphone Category : " + smData[12]);
               
               txtProdID.setText(smData[0]);
               txtProdType.setText(smData[1]);
               txtProdName.setText(smData[2]);
               txtQty.setText(smData[3]);
               txtPrice.setText(smData[4]);
               txtBrand.setText(smData[5]);
               txtModel.setText(smData[6]);
               txtdevName.setText(smData[7]);
               txtdevImei.setText(smData[8]);
               txtdevRam.setText(smData[9]);
               txtdevStorage.setText(smData[10]);
               txtdevWeight.setText(smData[11]);
               txtspCategory.setText(smData[12]);
          }else
          if(line.contains("Tablet")){
               makeTabletPanel();
               System.out.println("This is a tablet product");
               String[] tabData = line.split(",");
               System.out.println("Product ID     : " + tabData[0]);
               System.out.println("Product Type   : " + tabData[1]);
               System.out.println("Product Name   : " + tabData[2]);
               System.out.println("Product Qty    : " + tabData[3]);
               System.out.println("Product Price  : " + tabData[4]);
               System.out.println("Brand          : " + tabData[5]);
               System.out.println("Model          : " + tabData[6]);
               System.out.println("Device Name    : " + tabData[7]);
               System.out.println("Device IMEI    : " + tabData[8]);
               System.out.println("Device RAM     : " + tabData[9]);
               System.out.println("Device Storage : " + tabData[10]);
               System.out.println("Device Weight  : " + tabData[11]);
               System.out.println("Tablet Category : " + tabData[12]);
               
               txtProdID.setText(tabData[0]);
               txtProdType.setText(tabData[1]);
               txtProdName.setText(tabData[2]);
               txtQty.setText(tabData[3]);
               txtPrice.setText(tabData[4]);
               txtBrand.setText(tabData[5]);
               txtModel.setText(tabData[6]);
               txtdevName.setText(tabData[7]);
               txtdevImei.setText(tabData[8]);
               txtdevRam.setText(tabData[9]);
               txtdevStorage.setText(tabData[10]);
               txtdevWeight.setText(tabData[11]);
               txttbCategory.setText(tabData[12]);
               
          }else
          if(line.contains("Desktop")){
               makeDesktopPanel();
               System.out.println("This is a desktop product");
               String[] dsktpData = line.split(",");
               System.out.println("Product ID     : " + dsktpData[0]);
               System.out.println("Product Type   : " + dsktpData[1]);
               System.out.println("Product Name   : " + dsktpData[2]);
               System.out.println("Product Qty    : " + dsktpData[3]);
               System.out.println("Product Price  : " + dsktpData[4]);
               System.out.println("Brand          : " + dsktpData[5]);
               System.out.println("Model          : " + dsktpData[6]);
               System.out.println("Comp. Name     : " + dsktpData[7]);
               System.out.println("Comp. Serial   : " + dsktpData[8]);
               System.out.println("Comp. Proc.    : " + dsktpData[9]);
               System.out.println("Comp. RAM      : " + dsktpData[10]);
               System.out.println("Comp. Storage  : " + dsktpData[11]);
               System.out.println("Comp. Category : " + dsktpData[12]);
               
               txtProdID.setText(dsktpData[0]);
               txtProdType.setText(dsktpData[1]);
               txtProdName.setText(dsktpData[2]);
               txtQty.setText(dsktpData[3]);
               txtPrice.setText(dsktpData[4]);
               txtBrand.setText(dsktpData[5]);
               txtModel.setText(dsktpData[6]);
               txtcompName.setText(dsktpData[7]);
               txtcompSerial.setText(dsktpData[8]);
               txtcompProc.setText(dsktpData[9]);
               txtcompRam.setText(dsktpData[10]);
               txtcompStorage.setText(dsktpData[11]);
               txtcompCategory.setText(dsktpData[12]);
          }else
          if(line.contains("Laptop")){
               makeLaptopPanel();
               System.out.println("This is a laptop product");
               String[] lptpData = line.split(",");
               
               System.out.println("Product ID     : " + lptpData[0]);
               System.out.println("Product Type   : " + lptpData[1]);
               System.out.println("Product Name   : " + lptpData[2]);
               System.out.println("Product Qty    : " + lptpData[3]);
               System.out.println("Product Price  : " + lptpData[4]);
               System.out.println("Brand          : " + lptpData[5]);
               System.out.println("Model          : " + lptpData[6]);
               System.out.println("Comp. Name     : " + lptpData[7]);
               System.out.println("Comp. Serial   : " + lptpData[8]);
               System.out.println("Comp. Proc.    : " + lptpData[9]);
               System.out.println("Comp. RAM      : " + lptpData[10]);
               System.out.println("Comp. Storage  : " + lptpData[11]);
               System.out.println("Lap. Category  : " + lptpData[12]);
               System.out.println("Lap. Weight    : " + lptpData[13]);
               
               txtProdID.setText(lptpData[0]);
               txtProdType.setText(lptpData[1]);
               txtProdName.setText(lptpData[2]);
               txtQty.setText(lptpData[3]);
               txtPrice.setText(lptpData[4]);
               txtBrand.setText(lptpData[5]);
               txtModel.setText(lptpData[6]);
               txtcompName.setText(lptpData[7]);
               txtcompSerial.setText(lptpData[8]);
               txtcompProc.setText(lptpData[9]);
               txtcompRam.setText(lptpData[10]);
               txtcompStorage.setText(lptpData[11]);
               txtlapCategory.setText(lptpData[12]);
               txtlapWeight.setText(lptpData[13]);
               
          }else
           if(line.contains("null")){
               
            JTextField temp=null;
                for(Component clr:mkPanel.getComponents()){ //CLEAR ALL TEXTFIELD IN JPANEL3
                if(clr.getClass().toString().contains("javax.swing.JTextField")){
                    temp=(JTextField)clr;
                    temp.setText("");
                }//END IF
                }//END FOR

                for(Component clr:jPanel3.getComponents()){ //CLEAR ALL TEXTFIELD IN JPANEL3
                if(clr.getClass().toString().contains("javax.swing.JTextField")){
                    temp=(JTextField)clr;
                    temp.setText("");
                }//END IF
                }//END FOR
                dispose();
                jbSave.setEnabled(false);
                new msgBox("Product is not available \nor has been removed !\n","ERROR").showerrorMsg();
                
           }//END IF

        //END IF

      }
      catch(IOException e){
        System.out.println(e);
      }//END TRY CATCH
        
    }//END METHOD
    
    //PANEL TO SHOW TEXTFIELD FOR PRODUCT DESKTOP
     private void makeDesktopPanel(){
        mkPanel.removeAll();
        mkPanel.setLayout(new GridBagLayout());
        mkPanel.setBorder(BorderFactory.createTitledBorder("Desktop"));
        
        GridBagConstraints c = new GridBagConstraints();  
        
        //Y-AXIS = 0 | FOR comName
        //GRID (0,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 0;  
        mkPanel.add(lblcompName,c);
        
        //GRID (1,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 0;  
        mkPanel.add(txtcompName,c);
        
        //Y-AXIS = 1 | FOR compSerial
        //GRID (0,1)
        c.insets = new Insets(18, 0, 0, 0);//SET TOP PADDING
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 1;  
        mkPanel.add(lblcompSerial,c);
        
        //GRID (1,1)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 1;  
        mkPanel.add(txtcompSerial,c);
        
        //Y-AXIS = 2 | FOR compProc
        //GRID (0,2)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 2; 
        mkPanel.add(lblcompProc,c);
        
        //GRID (1,2)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 2;
        mkPanel.add(txtcompProc,c);
        
        //Y-AXIS = 3 | FOR compRam
        //GRID (0,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 3;
        mkPanel.add(lblcompRam,c);
        
        //GRID (1,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 3;
        mkPanel.add(txtcompRam,c);
        
        //Y-AXIS = 4 | FOR comStorage
        //GRID (0,4)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 4;
        mkPanel.add(lblcompStorage,c);
        
        //GRID (1,4)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 4;
        mkPanel.add(txtcompStorage,c);
        
        //Y-AXIS = 5 | FOR comCategory
        //GRID (0,5)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 5;
        mkPanel.add(lblcomCategory,c);
        
        //GRID (1,5)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 5;
        mkPanel.add(txtcompCategory,c);
        
        //REFRESH PANEL
        mkPanel.revalidate();
        mkPanel.repaint();
 }//END METHOD DESKTOP PANEL
    
    //PANEL TO SHOW TEXTFIELD FOR PRODUCT LAPTOP
    private void makeLaptopPanel(){
     mkPanel.removeAll();
     mkPanel.setLayout(new GridBagLayout());
     mkPanel.setBorder(BorderFactory.createTitledBorder("Laptop"));
     
    GridBagConstraints c = new GridBagConstraints();
    
        //Y-AXIS = 0 | FOR compName
        //GRID (0,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 0;  
        mkPanel.add(lblcompName,c);
        
        //GRID (1,0)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 0;  
        mkPanel.add(txtcompName,c);
        
        //Y-AXIS = 1 | FOR compSerial
        //GRID (0,1)
        c.insets = new Insets(18, 0, 0, 0);//SET TOP PADDING
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 1;  
        mkPanel.add(lblcompSerial,c);

        //GRID (1,1)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 1;  
        mkPanel.add(txtcompSerial,c);
        
        //Y-AXIS = 2 | FOR compProc
        //GRID (0,2)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 2; 
        mkPanel.add(lblcompProc,c);
        
        //GRID (1,2)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 2;
        mkPanel.add(txtcompProc,c);
        
        //Y-AXIS = 3 | FOR compRam
        //GRID (0,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 3;
        mkPanel.add(lblcompRam,c);
        
        //GRID (1,3)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 3;
        mkPanel.add(txtcompRam,c);
        
        //Y-AXIS = 4 | FOR compStorage
        //GRID (0,4)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 4;
        mkPanel.add(lblcompStorage,c);
        
        //GRID (1,4)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 4;
        mkPanel.add(txtcompStorage,c);  
        
        //Y-AXIS = 5 | FOR lapCategory
        //GRID (0,5)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 5;
        mkPanel.add(lbllapCategory,c);
        
        //GRID (1,5)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 5;
        mkPanel.add(txtlapCategory,c);
        
        //Y-AXIS = 6 | FOR lapWeight
        //GRID (0,6)
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 0;  
        c.gridy = 6;
        mkPanel.add(lbllapWeight,c);
        
        //GRID (1,6)        
        c.fill = GridBagConstraints.HORIZONTAL;
        c.gridx = 1;  
        c.gridy = 6;
        mkPanel.add(txtlapWeight,c);
        
        //UPDATE PANEL
        mkPanel.revalidate();
        mkPanel.repaint();
        
 }//END METHOD LAPTOP PANEL
    
       //PANEL TO SHOW TEXTFIELD FOR PRODUCT SMARTPHONE
    private void makeSmartphonePanel(){
     mkPanel.removeAll();
     mkPanel.setLayout(new GridBagLayout());
     mkPanel.setBorder(BorderFactory.createTitledBorder("Smartphone"));
     
      GridBagConstraints c = new GridBagConstraints();  

      //Y-AXIS = 0 | FOR devName
      //GRID (0,0)      
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 0;  
      mkPanel.add(lbldevName,c);
      
      //GRID (1,0)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 0;
      mkPanel.add(txtdevName,c);
      
      //Y-AXIS = 1 | FOR devImei
      //GRID (0,1)
      c.insets = new Insets(18, 0, 0, 0);//SET TOP PADDING
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 1;
      mkPanel.add(lbldevImei,c);
      
      //GRID (1,1)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 1;
      mkPanel.add(txtdevImei,c);
      
      //Y-AXIS = 2 | FOR devRam
      //GRID (0,2)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 2;
      mkPanel.add(lbldevRam,c);
      
      //GRID (1,2)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 2;
      mkPanel.add(txtdevRam,c);
      
      //Y-AXIS = 3 | FOR devStorage
      //GRID (0,3)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 3;
      mkPanel.add(lbldevStorage,c);
      
      //GRID (1,3)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 3;
      mkPanel.add(txtdevStorage,c);
      
      //Y-AXIS = 4 | FOR devWeight
      //GRID (0,4)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 4;
      mkPanel.add(lbldevWeight,c);
      
      //GRID (1,4)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 4;
      mkPanel.add(txtdevWeight,c);
      
      //Y-AXIS = 5 | FOR spCategory
      //GRID (0,5)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 5;
      mkPanel.add(lblspCategory,c);
      
      //GRID (1,5)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 5;
      mkPanel.add(txtspCategory,c);
      
      //UPDATE PANEL
      mkPanel.revalidate();
      mkPanel.repaint();
 }//END METHOD SMARTPHONE PANEL
    
        //PANEL TO SHOW TEXTFIELD FOR PRODUCT TABLET
    private void makeTabletPanel(){
     mkPanel.removeAll();
     mkPanel.setLayout(new GridBagLayout());
     mkPanel.setBorder(BorderFactory.createTitledBorder("Tablet"));

      //Y-AXIS = 0 | FOR devName
      //GRID (0,0)     
      GridBagConstraints c = new GridBagConstraints();  
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 0;  
      mkPanel.add(lbldevName,c);
      
      //GRID (1,0)  
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 0;
      mkPanel.add(txtdevName,c);
      
      //Y-AXIS = 1 | FOR devImei
      //GRID (0,0)   
      c.insets = new Insets(18, 0, 0, 0);//SET TOP PADDING
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 1;
      mkPanel.add(lbldevImei,c);
      
      //GRID (1,1)  
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 1;
      mkPanel.add(txtdevImei,c);
      
      //Y-AXIS = 2 | FOR devRam
      //GRID (0,2)      
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 2;
      mkPanel.add(lbldevRam,c);
      
      //GRID (1,2) 
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 2;
      mkPanel.add(txtdevRam,c);
      
      //Y-AXIS = 3 | FOR devStorage
      //GRID (0,3)           
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 3;
      mkPanel.add(lbldevStorage,c);
      
      //GRID (1,3) 
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 3;
      mkPanel.add(txtdevStorage,c);
      
      //Y-AXIS = 4 | FOR devWeight
      //GRID (0,4)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 4;
      mkPanel.add(lbldevWeight,c);
      
      //GRID (1,4)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 4;
      mkPanel.add(txtdevWeight,c);

      //Y-AXIS = 5 | FOR tbCategory
      //GRID (0,5)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 0;  
      c.gridy = 5;
      mkPanel.add(lbltbCategory,c);
      
      //GRID (1,5)
      c.fill = GridBagConstraints.HORIZONTAL;
      c.gridx = 1;  
      c.gridy = 5;
      mkPanel.add(txttbCategory,c);
      
      //UPDATE PANEL
      mkPanel.revalidate();
      mkPanel.repaint();
 }//END METHOD TABLET PANEL
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmEdit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbSave;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblProdID;
    private javax.swing.JLabel lblProdName;
    private javax.swing.JLabel lblQty;
    private javax.swing.JPanel mkPanel;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProdID;
    private javax.swing.JTextField txtProdName;
    private javax.swing.JTextField txtProdType;
    private javax.swing.JTextField txtQty;
    // End of variables declaration//GEN-END:variables
}
